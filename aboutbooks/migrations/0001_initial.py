# Generated by Django 3.2.6 on 2021-08-17 15:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='책 제목')),
                ('status', models.IntegerField(verbose_name='책 상태')),
                ('page', models.IntegerField(verbose_name='페이지 수')),
                ('level', models.IntegerField(verbose_name='책 레벨')),
                ('category', models.CharField(max_length=100, verbose_name='책 종류')),
                ('published', models.DateField(verbose_name='출간일')),
                ('publisher', models.CharField(max_length=100, verbose_name='출판사')),
                ('writer', models.CharField(blank=True, max_length=100, null=True, verbose_name='글쓴이')),
                ('painter', models.CharField(blank=True, max_length=100, null=True, verbose_name='그린이')),
                ('borrowed', models.DateField(blank=True, null=True, verbose_name='대여일')),
                ('returned', models.DateField(verbose_name='반납일')),
            ],
        ),
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='아이 이름')),
                ('age', models.IntegerField(verbose_name='아이 나이')),
                ('sex', models.CharField(choices=[('female', 'Female'), ('male', 'Male')], max_length=80)),
                ('book_level', models.IntegerField(blank=True, null=True, verbose_name='책읽기 레벨')),
            ],
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=100, verbose_name='관심 주제')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=100, verbose_name='거주지역')),
                ('phone', models.IntegerField(verbose_name='전화번호')),
                ('address', models.TextField(blank=True, null=True, verbose_name='주소')),
                ('unsubscribe', models.TextField(blank=True, null=True, verbose_name='구독 해제 사유')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField(verbose_name='서비스 리뷰')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='aboutbooks.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Read',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reading', models.IntegerField(verbose_name='회차')),
                ('address', models.TextField(blank=True, null=True, verbose_name='주소')),
                ('rate1', models.FloatField(blank=True, null=True, verbose_name='책1 별점')),
                ('report1', models.TextField(blank=True, null=True, verbose_name='신고사유')),
                ('rate2', models.FloatField(blank=True, null=True, verbose_name='책2 별점')),
                ('report2', models.TextField(blank=True, null=True, verbose_name='신고사유')),
                ('rate3', models.FloatField(blank=True, null=True, verbose_name='책3 별점')),
                ('report3', models.TextField(blank=True, null=True, verbose_name='신고사유')),
                ('rate4', models.FloatField(blank=True, null=True, verbose_name='책4 별점')),
                ('report4', models.TextField(blank=True, null=True, verbose_name='신고사유')),
                ('rate5', models.FloatField(blank=True, null=True, verbose_name='책5 별점')),
                ('report5', models.TextField(blank=True, null=True, verbose_name='신고사유')),
                ('borrowed', models.DateField(blank=True, null=True, verbose_name='대여일')),
                ('returned', models.DateField(verbose_name='예상 반납일')),
                ('book1', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='book1', to='aboutbooks.book')),
                ('book2', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='book2', to='aboutbooks.book')),
                ('book3', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='book3', to='aboutbooks.book')),
                ('book4', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='book4', to='aboutbooks.book')),
                ('book5', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='book5', to='aboutbooks.book')),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='child', to='aboutbooks.child')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(verbose_name='문의사항')),
                ('answered', models.BooleanField(default=False, verbose_name='질문에 답을 했으면 true, 아직 안했으면 false')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='aboutbooks.profile')),
            ],
        ),
        migrations.AddField(
            model_name='child',
            name='interest1',
            field=models.ManyToManyField(blank=True, related_name='interest1', to='aboutbooks.Interest'),
        ),
        migrations.AddField(
            model_name='child',
            name='interest2',
            field=models.ManyToManyField(blank=True, related_name='interest2', to='aboutbooks.Interest'),
        ),
        migrations.AddField(
            model_name='child',
            name='interest3',
            field=models.ManyToManyField(blank=True, related_name='interest3', to='aboutbooks.Interest'),
        ),
        migrations.AddField(
            model_name='child',
            name='parents',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='parents', to='aboutbooks.profile'),
        ),
        migrations.AddField(
            model_name='book',
            name='possession',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='possession', to='aboutbooks.child'),
        ),
        migrations.AddField(
            model_name='book',
            name='subject1',
            field=models.ManyToManyField(blank=True, related_name='subject1', to='aboutbooks.Interest'),
        ),
        migrations.AddField(
            model_name='book',
            name='subject2',
            field=models.ManyToManyField(blank=True, related_name='subject2', to='aboutbooks.Interest'),
        ),
        migrations.AddField(
            model_name='book',
            name='subject3',
            field=models.ManyToManyField(blank=True, related_name='subject3', to='aboutbooks.Interest'),
        ),
        migrations.AddField(
            model_name='book',
            name='subject4',
            field=models.ManyToManyField(blank=True, related_name='subject4', to='aboutbooks.Interest'),
        ),
        migrations.AddField(
            model_name='book',
            name='subject5',
            field=models.ManyToManyField(blank=True, related_name='subject5', to='aboutbooks.Interest'),
        ),
    ]
